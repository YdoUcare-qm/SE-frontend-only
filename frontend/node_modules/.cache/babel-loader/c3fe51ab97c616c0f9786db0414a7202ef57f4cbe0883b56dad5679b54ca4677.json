{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: null // Initialize userProfile as null\n    };\n  },\n\n  created() {\n    // Get user ID from localStorage\n    const userId = localStorage.getItem('id');\n    if (!userId) {\n      console.error('User ID not found in localStorage');\n      alert('Not authorized to view this page');\n      return;\n    }\n    const requestData = {\n      user_id: userId\n    };\n    // Make API call to fetch user profile data\n    fetch('http://localhost:5000/api/user/profile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch user details');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      // Set userProfile data received from the backend to the data object\n      this.user = data.data;\n    }).catch(error => {\n      console.error('Error fetching user details:', error.message);\n      // Handle error, show message to user, etc.\n    });\n  }\n};","map":{"version":3,"names":["data","user","created","userId","localStorage","getItem","console","error","alert","requestData","user_id","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","log","catch","message"],"sources":["/home/jeevan/Integration Testing/frontend/frontend/src/components/usercomponents/UserProfile.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- Left-side navigation bar -->\n      <div class=\"sidebar\">\n        <!-- User information -->\n        <div class=\"user-info\">\n          <!-- Small user photo -->\n          <div class=\"small-user-photo\">\n            <img src=\"../profile.jpg\" alt=\"User Photo\" class=\"small-rounded-photo\">\n          </div>\n          <!-- Username -->\n          <div class=\"username\">\n            <p>{{ user.name }}</p>\n          </div>\n          <!-- Edit Profile button -->\n          <button @click=\"editProfile\" class=\"edit-profile-button\">Edit Profile</button>\n          <!-- Email -->\n          <div class=\"user-email\">\n            <p>Email: {{ user.email }}</p>\n          </div>\n        </div>\n        <!-- Navigation links -->\n        <div class=\"navigation-links\">\n          <ul>\n            <li><a href=\"/home\">Home</a></li>\n            <li><a href=\"/mytickets\">My Tickets</a></li>\n            <li><a href=\"/newticket\">New Ticket</a></li>\n            <li><a href=\"/faq\">FAQs</a></li>\n            <li><a href=\"/usersettings\">Settings</a></li>\n          </ul>\n        </div>\n      </div>\n  \n      <!-- Main content area -->\n      <div class=\"main-content\">\n        <!-- Main user information section -->\n        <div class=\"profile\">\n          <!-- Navigation bar -->\n          <div class=\"navbar\">\n            <div class=\"website-name\">{{ websiteName }}</div>\n            <router-link to=\"/\"><button @click=\"logoutUser\" class=\"logout-button\">Logout</button></router-link>\n          </div>\n  \n          <!-- Main user information section -->\n          <div class=\"main-user-info\">\n            <!-- User details including photo, name, and email -->\n            <div class=\"user-details\">\n              <!-- Large user photo -->\n              <div class=\"user-photo\">\n                <!-- Hardcoded user photo -->\n                <img src=\"../profile.jpg\" alt=\"User Photo\" class=\"rounded-photo\">\n              </div>\n              <!-- Name and email -->\n              <div class=\"name-email\">\n                <h2>{{ user.name }}</h2>\n                <p>Email: {{ user.email }}</p>\n                <p>Student</p>\n                <p>Name: {{ user.name }}</p>\n              </div>\n            </div>\n  \n            <!-- User stats -->\n            <div class=\"user-stats\">\n              <div class=\"stat\">\n                <span class=\"stat-label\">Replies:</span>\n                <span class=\"stat-value\">{{  }}</span>\n              </div>\n              <div class=\"stat\">\n                <span class=\"stat-label\">Upvotes:</span>\n                <span class=\"stat-value\">{{  }}</span>\n              </div>\n              <div class=\"stat\">\n                <span class=\"stat-label\">Escalations:</span>\n                <span class=\"stat-value\">{{  }}</span>\n              </div>\n              <div class=\"stat\">\n                <span class=\"stat-label\">Reported:</span>\n                <span class=\"stat-value\">{{  }}</span>\n              </div>\n              <div class=\"stat\">\n                <span class=\"stat-label\">Warnings:</span>\n                <span class=\"stat-value\">{{ }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        user: null // Initialize userProfile as null\n      };\n    },\n    created() {\n      // Get user ID from localStorage\n      const userId = localStorage.getItem('id');\n      if (!userId) {\n        console.error('User ID not found in localStorage');\n        alert('Not authorized to view this page')\n        return;\n      }\n      const requestData = {\n      user_id: userId\n      };\n      // Make API call to fetch user profile data\n      fetch('http://localhost:5000/api/user/profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestData) \n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch user details');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(data)\n        // Set userProfile data received from the backend to the data object\n        this.user = data.data;\n      })\n      .catch(error => {\n        console.error('Error fetching user details:', error.message);\n        // Handle error, show message to user, etc.\n      });\n    }\n  }\n  </script>\n  \n \n  \n  <style scoped>\n  /* Left-side navigation bar styles */\n  .sidebar {\n    width: 250px;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #333;\n    color: #fff;\n    padding-top: 20px;\n  }\n  \n  .user-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0 20px;\n    margin-bottom: 20px;\n  }\n  \n  .small-user-photo {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    overflow: hidden;\n  }\n  \n  .small-rounded-photo {\n    width: 100%;\n    height: auto;\n  }\n  \n  .username {\n    margin-top: 10px;\n    font-size: 18px;\n  }\n  \n  .edit-profile-button {\n    background-color: #4CAF50;\n    border: none;\n    color: white;\n    padding: 10px 20px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n    margin-top: 10px;\n  }\n  \n  .edit-profile-button:hover {\n    background-color: #45a049;\n  }\n  \n  .user-email {\n    margin-top: 10px;\n    font-size: 14px;\n  }\n  \n  .navigation-links ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n  }\n  \n  .navigation-links ul li {\n    padding: 10px 20px;\n  }\n  \n  .navigation-links ul li a {\n    text-decoration: none;\n    color: #fff;\n  }\n  \n  .navigation-links ul li a:hover {\n    text-decoration: underline;\n  }\n  \n  /* Main content area styles */\n  .main-content {\n    margin-left: 250px; /* Adjusted to match the width of the sidebar */\n    padding: 20px;\n  }\n  \n  /* Styles for navigation bar */\n  .navbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    background-color: #f0f0f0;\n  }\n  \n  .website-name {\n    font-size: 20px;\n  }\n  \n  .logout-button {\n    background-color: #ff6f61;\n    border: none;\n    color: white;\n    padding: 10px 20px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  \n  .logout-button:hover {\n    background-color: #e65346;\n  }\n  \n  /* Main user info layout */\n  .main-user-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .user-details {\n    display: flex;\n    align-items: center;\n  }\n  \n  .user-photo {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    overflow: hidden;\n    margin-right: 20px;\n  }\n  \n  .rounded-photo {\n    width: 100%;\n    height: auto;\n  }\n  \n  .name-email {\n    text-align: center;\n  }\n  \n  .name-email h2 {\n    margin-top: 0;\n  }\n  \n  .name-email p {\n    margin-bottom: 10px;\n  }\n  \n  /* User stats layout */\n  .user-stats {\n    margin-top: 20px;\n  }\n  \n  .stat {\n    margin-bottom: 10px;\n  }\n  \n  .stat-label {\n    font-weight: bold;\n  }\n  \n  .stat-value {\n    margin-left: 10px;\n  }\n  </style>\n  "],"mappings":"AA2FE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAG,CAAE;IACb,CAAC;EACH,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;IACzC,IAAI,CAACF,MAAM,EAAE;MACXG,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;MAClDC,KAAK,CAAC,kCAAkC;MACxC;IACF;IACA,MAAMC,WAAU,GAAI;MACpBC,OAAO,EAAEP;IACT,CAAC;IACD;IACAQ,KAAK,CAAC,wCAAwC,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,EACAQ,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,OAAOF,QAAQ,CAACG,IAAI,EAAE;IACxB,CAAC,EACAJ,IAAI,CAACjB,IAAG,IAAK;MACZM,OAAO,CAACgB,GAAG,CAACtB,IAAI;MAChB;MACA,IAAI,CAACC,IAAG,GAAID,IAAI,CAACA,IAAI;IACvB,CAAC,EACAuB,KAAK,CAAChB,KAAI,IAAK;MACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACiB,OAAO,CAAC;MAC5D;IACF,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}