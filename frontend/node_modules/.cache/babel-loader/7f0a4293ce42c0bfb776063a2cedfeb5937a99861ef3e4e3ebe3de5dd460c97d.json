{"ast":null,"code":"export default {\n  name: \"UserHome\",\n  data() {\n    return {\n      categories: [],\n      subscribedCategories: []\n    };\n  },\n  created() {\n    // Fetch categories and subscribed categories\n    this.fetchCategories();\n    this.fetchSubscribedCategories();\n  },\n  methods: {\n    fetchCategories() {\n      // Fetch categories from API\n      fetch('http://localhost:5000/api/categories').then(response => response.json()).then(data => {\n        this.categories = data.category_list.categories;\n      }).catch(error => {\n        console.error('Error fetching categories:', error);\n      });\n    },\n    fetchSubscribedCategories() {\n      // Fetch subscribed categories for the user\n      const userId = localStorage.getItem('userId');\n      fetch('http://localhost:5000/api/user/subscriptions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: userId\n        })\n      }).then(response => response.json()).then(data => {\n        this.subscribedCategories = data.categories;\n      }).catch(error => {\n        console.error('Error fetching subscribed categories:', error);\n      });\n    },\n    isSubscribed(categoryId) {\n      // Check if categoryId is subscribed\n      return this.subscribedCategories.some(cat => cat.cid === categoryId);\n    }\n  }\n};","map":{"version":3,"names":["name","data","categories","subscribedCategories","created","fetchCategories","fetchSubscribedCategories","methods","fetch","then","response","json","category_list","catch","error","console","userId","localStorage","getItem","method","headers","body","JSON","stringify","user_id","isSubscribed","categoryId","some","cat","cid"],"sources":["/home/jeevan/Integration Testing/frontend/frontend/src/components/usercomponents/UserHome.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Left-side navigation bar -->\n    <div class=\"sidebar\">\n      \n      <!-- Navigation links -->\n      <div class=\"navigation-links\">\n        <ul>\n          <li><a href=\"/userprofile\">Profile</a></li>\n          <li><a href=\"/userhome\">Home</a></li>\n          <li><a href=\"/mytickets\">My Tickets</a></li>\n          <li><a href=\"/newticket\">New Ticket</a></li>\n          <li><a href=\"/subscriptions\">Subscriptions</a></li>\n          <li><a href=\"/faq\">FAQs</a></li>\n          <li><a href=\"/usersettings\">Settings</a></li>\n        </ul>\n      </div>\n    </div>\n\n    <!-- Main content area -->\n    <div class=\"main-content\">\n      <!-- Main user information section -->\n      \n        <!-- Navigation bar -->\n        <div class=\"navbar\">\n          <div class=\"website-name\">{{ websiteName }}</div>\n          <router-link to=\"/\"><button @click=\"logoutUser\" class=\"logout-button\">Logout</button></router-link>\n        </div>\n\n          <div class=\"user-home\">\n          <div class=\"category-card\" v-for=\"category in categories\" :key=\"category.id\">\n          <router-link :to=\"`/categorytopics/${category.id}`\">\n        <div class=\"card-content\">\n          <div class=\"category-name\">{{ category.name }}</div>\n          <div class=\"category-description\">{{ category.description }}</div>\n          <div class=\"subscription-status\">Subscribed</div>\n        </div>\n      </router-link>\n    </div>\n  </div>\n        \n          \n        \n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserHome\",\n  data() {\n    return {\n      categories: [],\n      subscribedCategories: []\n    };\n  },\n\n  created() {\n    // Fetch categories and subscribed categories\n    this.fetchCategories();\n    this.fetchSubscribedCategories();\n  },\n\n  methods: {\n    fetchCategories() {\n      // Fetch categories from API\n      fetch('http://localhost:5000/api/categories')\n        .then(response => response.json())\n        .then(data => {\n          this.categories = data.category_list.categories;\n        })\n        .catch(error => {\n          console.error('Error fetching categories:', error);\n        });\n    },\n\n    fetchSubscribedCategories() {\n      // Fetch subscribed categories for the user\n      const userId = localStorage.getItem('userId');\n      fetch('http://localhost:5000/api/user/subscriptions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ user_id: userId })\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.subscribedCategories = data.categories;\n      })\n      .catch(error => {\n        console.error('Error fetching subscribed categories:', error);\n      });\n    },\n\n    isSubscribed(categoryId) {\n      // Check if categoryId is subscribed\n      return this.subscribedCategories.some(cat => cat.cid === categoryId);\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Left-side navigation bar styles */\n.user-home {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n}\n\n.category-card {\n  width: 300px;\n  margin-bottom: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  overflow: hidden;\n  cursor: pointer;\n}\n\n.card-content {\n  padding: 20px;\n}\n\n.category-name {\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.category-description {\n  margin-bottom: 10px;\n}\n\n.subscription-status {\n  font-style: italic;\n}\n.sidebar {\n  width: 250px;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #333;\n  color: #fff;\n  padding-top: 20px;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 20px;\n  margin-bottom: 20px;\n}\n\n.small-user-photo {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  overflow: hidden;\n}\n\n.small-rounded-photo {\n  width: 100%;\n  height: auto;\n}\n\n.username {\n  margin-top: 10px;\n  font-size: 18px;\n}\n\n.edit-profile-button {\n  background-color: #4CAF50;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: 10px;\n}\n\n.edit-profile-button:hover {\n  background-color: #45a049;\n}\n\n.user-email {\n  margin-top: 10px;\n  font-size: 14px;\n}\n\n.navigation-links ul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n.navigation-links ul li {\n  padding: 10px 20px;\n}\n\n.navigation-links ul li a {\n  text-decoration: none;\n  color: #fff;\n}\n\n.navigation-links ul li a:hover {\n  text-decoration: underline;\n}\n\n/* Main content area styles */\n.main-content {\n  margin-left: 250px; /* Adjusted to match the width of the sidebar */\n  padding: 20px;\n}\n\n/* Styles for navigation bar */\n.navbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background-color: #f0f0f0;\n}\n\n.website-name {\n  font-size: 20px;\n}\n\n.logout-button {\n  background-color: #ff6f61;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.logout-button:hover {\n  background-color: #e65346;\n}\n\n/* Main user info layout */\n.main-user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.user-details {\n  display: flex;\n  align-items: center;\n}\n\n.user-photo {\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  overflow: hidden;\n  margin-right: 20px;\n}\n\n.rounded-photo {\n  width: 100%;\n  height: auto;\n}\n\n.name-email {\n  text-align: center;\n}\n\n.name-email h2 {\n  margin-top: 0;\n}\n\n.name-email p {\n  margin-bottom: 10px;\n}\n\n/* User stats layout */\n.user-stats {\n  margin-top: 20px;\n}\n\n.stat {\n  margin-bottom: 10px;\n}\n\n.stat-label {\n  font-weight: bold;\n}\n\n.stat-value {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":"AAgDA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,oBAAoB,EAAE;IACxB,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,yBAAyB,EAAE;EAClC,CAAC;EAEDC,OAAO,EAAE;IACPF,eAAeA,CAAA,EAAG;MAChB;MACAG,KAAK,CAAC,sCAAsC,EACzCC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE,EAChCF,IAAI,CAACR,IAAG,IAAK;QACZ,IAAI,CAACC,UAAS,GAAID,IAAI,CAACW,aAAa,CAACV,UAAU;MACjD,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACN,CAAC;IAEDR,yBAAyBA,CAAA,EAAG;MAC1B;MACA,MAAMU,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7CV,KAAK,CAAC,8CAA8C,EAAE;QACpDW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAER;QAAO,CAAC;MAC1C,CAAC,EACAP,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,EAAE,EAChCF,IAAI,CAACR,IAAG,IAAK;QACZ,IAAI,CAACE,oBAAmB,GAAIF,IAAI,CAACC,UAAU;MAC7C,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;IACJ,CAAC;IAEDW,YAAYA,CAACC,UAAU,EAAE;MACvB;MACA,OAAO,IAAI,CAACvB,oBAAoB,CAACwB,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,GAAE,KAAMH,UAAU,CAAC;IACtE;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}