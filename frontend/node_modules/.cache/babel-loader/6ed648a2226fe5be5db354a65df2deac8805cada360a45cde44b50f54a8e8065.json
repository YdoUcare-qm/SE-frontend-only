{"ast":null,"code":"export default {\n  name: 'TopicPosts',\n  data() {\n    return {\n      websiteName: \"Dis.integrate\",\n      topicId: null,\n      posts: [],\n      data: null,\n      postID: null,\n      resolvedContent: '',\n      isModalOpen: false,\n      solution: ''\n    };\n  },\n  created() {\n    // Extract topic ID from the route\n    this.topicId = this.$route.params.id;\n    // Fetch posts for the topic\n    this.fetchPosts();\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        // Fetch posts for the topic\n        const response = await fetch('http://localhost:5000/api/posts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.topicId\n          })\n        });\n        this.data = await response.json();\n        this.posts = this.data.post_stream.posts;\n        // After fetching posts, check for topic resolution\n        this.checkTopicResolution();\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n    async checkTopicResolution() {\n      try {\n        // Fetch topic resolution status\n        const resolutionResponse = await fetch(`http://localhost:5000/api/staff/topicresolution`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.topicId\n          })\n        });\n        const resolutionData = await resolutionResponse.json();\n        this.postID = resolutionData.post_id;\n        console.log(this.postID);\n        // Check if topic is resolved\n        if (resolutionData.post_id > 0) {\n          // If topic is resolved, find the resolved post in the fetched posts\n          const resolvedPost = this.posts.find(post => post.id === resolutionData.post_id);\n          if (resolvedPost) {\n            // If topic is resolved, set the resolved content\n            this.resolvedContent = resolvedPost.cooked;\n          }\n        }\n      } catch (error) {\n        console.error('Error checking topic resolution:', error);\n      }\n    },\n    logoutUser() {\n      // Logic to handle user logout\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n    openModal() {\n      this.isModalOpen = true;\n    },\n    // Close the modal\n    closeModal() {\n      this.isModalOpen = false;\n    },\n    // Resolve the ticket\n    async resolveTopic() {\n      try {\n        const response = await fetch('http://localhost:5000/api/staff/resolvetopic', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            topic_id: this.topicId,\n            resolution: this.solution\n          })\n        });\n        alert(response.message);\n        // Handle response...\n      } catch (error) {\n        console.error('Error resolving ticket:', error);\n      } finally {\n        // Close the modal regardless of success or failure\n        this.closeModal();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","websiteName","topicId","posts","postID","resolvedContent","isModalOpen","solution","created","$route","params","id","fetchPosts","methods","response","fetch","method","headers","body","JSON","stringify","json","post_stream","checkTopicResolution","error","console","resolutionResponse","resolutionData","post_id","log","resolvedPost","find","post","cooked","logoutUser","formatDate","date","Date","toLocaleDateString","openModal","closeModal","resolveTopic","topic_id","resolution","alert","message"],"sources":["/home/jeevan/Integration Testing/SE-frontend-only/frontend/src/components/staffcomponents/StaffTopicPosts.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- Left-side navigation bar -->\n      <div class=\"sidebar\">\n        \n        <!-- Navigation links -->\n        <div class=\"navigation-links\">\n          <ul>\n            <li><a href=\"/staffprofile\">Profile</a></li>\n            <li><a href=\"/staffhome\">Home</a></li>\n            <li><a href=\"/managetickets\">Manage Tickets</a></li>\n            <li><a href=\"/managetopics\">Manage Topics</a></li>\n            <li><a href=\"/staffsettings\">Settings</a></li>\n          </ul>\n        </div>\n      </div>\n      <div class=\"navbar\">\n            <div class=\"website-name\">{{ websiteName }}</div>\n            <router-link to=\"/\"><button @click=\"logoutUser\" class=\"logout-button\">Logout</button></router-link>\n          </div>\n      <!-- Main content area -->\n      <div class=\"main-content\">\n        <!-- Main user information section -->\n        \n          <!-- Navigation bar -->\n          \n        \n          \n  <div class=\"topic-posts\">\n        <h1>{{ data.title }}</h1>\n        <ul class=\"posts-list\">\n          <li v-for=\"post in posts\" :key=\"post.id\" class=\"post-item\">\n            <div class=\"post-title\">{{ post.username }}</div>\n            <div class=\"post-content\">{{ post.cooked }}</div>\n            <div class=\"post-author\">Author: {{ post.name }}</div>\n            <div class=\"post-date\">Date: {{ formatDate(post.created_at) }}</div>\n          </li>\n        </ul>\n        <!-- Resolve Topic Section -->\n        <div v-if=\"postID === 0\">\n          <button @click=\"openModal\">Resolve Topic</button>\n <div v-if=\"isModalOpen\" class=\"modal\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">Resolve Topic</div>\n      <form @submit.prevent=\"resolveTicket\">\n        <div class=\"form-group\">\n          <label for=\"solution\">Solution:</label>\n          <textarea v-model=\"solution\" id=\"solution\" rows=\"4\" required></textarea>\n        </div>\n        <button type=\"submit\" @click=\"closeModal\" style=\"background-color: brown;margin-right: 20px;\">Cancel</button>\n        <button type=\"submit\" @click=\"resolveTopic\">Resolve</button>\n      </form>\n    </div>\n  </div>\n        </div>\n        <!-- Fixed Box for Resolved Topic -->\n        <div v-else class=\"fixed-box\">\n          <h6>Resolution</h6>\n          <div>{{ resolvedContent }}</div>\n        </div>\n      </div>\n    </div>\n          \n    \n          \n      </div>\n  </template>\n  \n  <script>\nexport default {\n  name: 'TopicPosts',\n\n  data() {\n    return {\n      websiteName: \"Dis.integrate\",\n      topicId: null,\n      posts: [],\n      data: null,\n      postID: null,\n      resolvedContent: '',\n      isModalOpen: false,\n      solution: '' \n    };\n  },\n\n  created() {\n    // Extract topic ID from the route\n    this.topicId = this.$route.params.id;\n    // Fetch posts for the topic\n    this.fetchPosts();\n  },\n\n  methods: {\n    async fetchPosts() {\n      try {\n        // Fetch posts for the topic\n        const response = await fetch('http://localhost:5000/api/posts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ id: this.topicId })\n        });\n        this.data = await response.json();\n        this.posts = this.data.post_stream.posts;\n        // After fetching posts, check for topic resolution\n        this.checkTopicResolution();\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n\n    async checkTopicResolution() {\n      try {\n        // Fetch topic resolution status\n        const resolutionResponse = await fetch(`http://localhost:5000/api/staff/topicresolution`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ id: this.topicId })\n        });\n        const resolutionData = await resolutionResponse.json();\n        this.postID = resolutionData.post_id\n        console.log(this.postID)\n        // Check if topic is resolved\n        if (resolutionData.post_id > 0) {\n          // If topic is resolved, find the resolved post in the fetched posts\n          const resolvedPost = this.posts.find(post => post.id === resolutionData.post_id);\n          if (resolvedPost) {\n            // If topic is resolved, set the resolved content\n            this.resolvedContent = resolvedPost.cooked;\n          }\n        }\n      } catch (error) {\n        console.error('Error checking topic resolution:', error);\n      }\n    },\n\n    logoutUser() {\n      // Logic to handle user logout\n    },\n\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n    openModal() {\n    this.isModalOpen = true;\n  },\n\n  // Close the modal\n  closeModal() {\n    this.isModalOpen = false;\n  },\n\n  // Resolve the ticket\n  async resolveTopic() {\n    try {\n      const response = await fetch('http://localhost:5000/api/staff/resolvetopic', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ topic_id: this.topicId, resolution: this.solution })\n      });\n      alert(response.message)\n      // Handle response...\n    } catch (error) {\n      console.error('Error resolving ticket:', error);\n    } finally {\n      // Close the modal regardless of success or failure\n      this.closeModal();\n    }\n  }\n  }\n}\n</script>\n\n  \n  <style scoped>\n  /* Left-side navigation bar styles */\n  user-home {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  \n  .category-card {\n    width: 300px;\n    margin-bottom: 20px;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n  }\n  \n  .card-content {\n    padding: 20px;\n  }\n  \n  .category-name {\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  .category-description {\n    margin-bottom: 10px;\n  }\n  \n  .subscription-status {\n    font-style: italic;\n  }\n  \n  \n  .sidebar {\n    width: 250px;\n    height: 100%;\n    position: fixed;\n    top: 75px;\n    left: 0;\n    background-color: #333;\n    color: #fff;\n    padding-top: 20px;\n  }\n  \n  .navigation-links ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n  }\n  \n  .navigation-links ul li {\n    padding: 10px 20px;\n  }\n  \n  .navigation-links ul li a {\n    text-decoration: none;\n    color: #fff;\n  }\n  \n  .navigation-links ul li a:hover {\n    text-decoration: underline;\n  }\n  \n  /* Main content area styles */\n  \n  \n  /* Styles for navigation bar */\n  .navbar {\n    position: fixed;\n    top:0;\n    right:0;\n    left:0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    background-color: #f0f0f0;\n  }\n  \n  .website-name {\n    font-size: 50px;\n  }\n  \n  .logout-button {\n    background-color: #ff6f61;\n    border: none;\n    color: white;\n    padding: 10px 20px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  \n  .logout-button:hover {\n    background-color: #e65346;\n  }\n  .main-content {\n    margin-left: 250px;\n    margin-top: 85px;\n    /* Adjusted to match the width of the sidebar */\n    padding: 20px;\n    display: flex; /* Ensure left and right sides are displayed side by side */\n  }\n  .topic-posts {\n  margin-top: 85px; /* Adjusted to match the height of the fixed navbar */\n}\n\n/* Fixed box for resolved topic */\n.fixed-box {\n  position: fixed;\n  bottom: 20px;\n  left: 20px;\n  width: calc(100% - 40px); /* Adjusted to match padding */\n  padding: 20px;\n  background-color: #f0f0f0;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background-color: #fff;\n  margin: 200px 200px 200px 200px;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.modal-header {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: bold;\n}\n\ntextarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\nbutton[type=\"submit\"] {\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #0056b3;\n}\n  </style>\n  "],"mappings":"AAqEA,eAAe;EACbA,IAAI,EAAE,YAAY;EAElBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,eAAe;MAC5BC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,EAAE;MACTH,IAAI,EAAE,IAAI;MACVI,MAAM,EAAE,IAAI;MACZC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,KAAK;MAClBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACN,OAAM,GAAI,IAAI,CAACO,MAAM,CAACC,MAAM,CAACC,EAAE;IACpC;IACA,IAAI,CAACC,UAAU,EAAE;EACnB,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAC9DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAET,EAAE,EAAE,IAAI,CAACT;UAAQ,CAAC;QAC3C,CAAC,CAAC;QACF,IAAI,CAACF,IAAG,GAAI,MAAMc,QAAQ,CAACO,IAAI,EAAE;QACjC,IAAI,CAAClB,KAAI,GAAI,IAAI,CAACH,IAAI,CAACsB,WAAW,CAACnB,KAAK;QACxC;QACA,IAAI,CAACoB,oBAAoB,EAAE;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAED,MAAMD,oBAAoBA,CAAA,EAAG;MAC3B,IAAI;QACF;QACA,MAAMG,kBAAiB,GAAI,MAAMX,KAAK,CAAE,iDAAgD,EAAE;UACxFC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAET,EAAE,EAAE,IAAI,CAACT;UAAQ,CAAC;QAC3C,CAAC,CAAC;QACF,MAAMyB,cAAa,GAAI,MAAMD,kBAAkB,CAACL,IAAI,EAAE;QACtD,IAAI,CAACjB,MAAK,GAAIuB,cAAc,CAACC,OAAM;QACnCH,OAAO,CAACI,GAAG,CAAC,IAAI,CAACzB,MAAM;QACvB;QACA,IAAIuB,cAAc,CAACC,OAAM,GAAI,CAAC,EAAE;UAC9B;UACA,MAAME,YAAW,GAAI,IAAI,CAAC3B,KAAK,CAAC4B,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACrB,EAAC,KAAMgB,cAAc,CAACC,OAAO,CAAC;UAChF,IAAIE,YAAY,EAAE;YAChB;YACA,IAAI,CAACzB,eAAc,GAAIyB,YAAY,CAACG,MAAM;UAC5C;QACF;MACF,EAAE,OAAOT,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDU,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IAEDC,UAAUA,CAACC,IAAI,EAAE;MACf,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,EAAE;IAC5C,CAAC;IACDC,SAASA,CAAA,EAAG;MACZ,IAAI,CAACjC,WAAU,GAAI,IAAI;IACzB,CAAC;IAED;IACAkC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAClC,WAAU,GAAI,KAAK;IAC1B,CAAC;IAED;IACA,MAAMmC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAM3B,QAAO,GAAI,MAAMC,KAAK,CAAC,8CAA8C,EAAE;UAC3EC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEsB,QAAQ,EAAE,IAAI,CAACxC,OAAO;YAAEyC,UAAU,EAAE,IAAI,CAACpC;UAAS,CAAC;QAC5E,CAAC,CAAC;QACFqC,KAAK,CAAC9B,QAAQ,CAAC+B,OAAO;QACtB;MACF,EAAE,OAAOrB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,UAAU;QACR;QACA,IAAI,CAACgB,UAAU,EAAE;MACnB;IACF;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}