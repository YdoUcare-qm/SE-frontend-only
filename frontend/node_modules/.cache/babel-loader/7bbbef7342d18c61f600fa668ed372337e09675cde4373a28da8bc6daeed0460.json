{"ast":null,"code":"export default {\n  name: 'UserSubscriptions',\n  data() {\n    return {\n      websiteName: \"Dis.integrate\",\n      categories: []\n    };\n  },\n  created() {\n    // Fetch categories\n    this.fetchCategories();\n  },\n  methods: {\n    fetchCategories() {\n      // Fetch categories from API\n      fetch('http://localhost:5000/api/categories').then(response => response.json()).then(data => {\n        this.categories = data.category_list.categories;\n        // After fetching categories, fetch subscribed categories for the user\n        this.fetchSubscribedCategories();\n      }).catch(error => {\n        console.error('Error fetching categories:', error);\n      });\n    },\n    fetchSubscribedCategories() {\n      // Fetch subscribed categories for the user\n      const userId = localStorage.getItem('userId');\n      fetch('http://localhost:5000/api/user/subscriptions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: userId\n        })\n      }).then(response => response.json()).then(data => {\n        const subscribedCategoryIds = data.categories.map(c => c.cid);\n        // Mark categories as subscribed or not based on the response\n        this.categories.forEach(category => {\n          category.subscribed = subscribedCategoryIds.includes(category.id);\n        });\n      }).catch(error => {\n        console.error('Error fetching subscribed categories:', error);\n      });\n    },\n    isSubscribed(categoryId) {\n      // Check if categoryId is subscribed\n      const category = this.categories.find(c => c.id === categoryId);\n      return category ? category.subscribed : false;\n    },\n    toggleSubscription(categoryId) {\n      // Get user ID from localStorage\n      const userId = localStorage.getItem('id');\n      // Send API call to toggle subscription\n      fetch('http://localhost:5000/api/user/togglesub', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: userId,\n          category: categoryId\n        })\n      }).then(response => response.json()).then(data => {\n        // Update category subscription status based on response\n        const category = this.categories.find(c => c.id === categoryId);\n        if (category) {\n          category.subscribed = data.subscribed;\n          location.reload();\n        }\n      }).catch(error => {\n        console.error('Error toggling subscription:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","websiteName","categories","created","fetchCategories","methods","fetch","then","response","json","category_list","fetchSubscribedCategories","catch","error","console","userId","localStorage","getItem","method","headers","body","JSON","stringify","user_id","subscribedCategoryIds","map","c","cid","forEach","category","subscribed","includes","id","isSubscribed","categoryId","find","toggleSubscription","location","reload"],"sources":["/home/jeevan/Integration Testing/frontend/frontend/src/components/usercomponents/UserSubscriptions.vue"],"sourcesContent":["<template>\r\n    <!-- Left-side navigation bar -->\r\n    <div class=\"sidebar\">\r\n      \r\n      <!-- Navigation links -->\r\n      <div class=\"navigation-links\">\r\n        <ul>\r\n            <li><a href=\"/userprofile\">Profile</a></li>\r\n            <li><a href=\"/home\">Home</a></li>\r\n            <li><a href=\"/mytickets\">My Tickets</a></li>\r\n            <li><a href=\"/newticket\">New Ticket</a></li>\r\n            <li><a href=\"/subscriptions\">Subscriptions</a></li>\r\n            <li><a href=\"/faq\">FAQs</a></li>\r\n            <li><a href=\"/usersettings\">Settings</a></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main content area -->\r\n    <div class=\"main-content\">\r\n      <!-- Main user information section -->\r\n      <div class=\"profile\">\r\n        <!-- Navigation bar -->\r\n        <div class=\"navbar\">\r\n          <div class=\"website-name\">{{ websiteName }}</div>\r\n          <button @click=\"logoutUser\" class=\"logout-button\">Logout</button>\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    <div>\r\n      <div class=\"main-content\">\r\n        <div id=\"app\">\r\n          <div v-for=\"category in categories\" :key=\"category.id\" class=\"category-item\">\r\n            <div class=\"category-name\">{{ category.name }}</div>\r\n            <button @click=\"toggleSubscription(category.id)\">\r\n            {{ isSubscribed(category.id) ? 'Unsubscribe' : 'Subscribe' }}\r\n            </button>\r\n    </div>\r\n  </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n  <script>\r\n  export default {\r\n    name: 'UserSubscriptions',\r\n    \r\n\r\n    data() {\r\n    return {\r\n      websiteName: \"Dis.integrate\",\r\n      categories: []\r\n    };\r\n  },\r\n  created() {\r\n    // Fetch categories\r\n    this.fetchCategories();\r\n  },\r\n  methods: {\r\n    fetchCategories() {\r\n      // Fetch categories from API\r\n      fetch('http://localhost:5000/api/categories')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.categories = data.category_list.categories;\r\n          // After fetching categories, fetch subscribed categories for the user\r\n          this.fetchSubscribedCategories();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching categories:', error);\r\n        });\r\n    },\r\n    fetchSubscribedCategories() {\r\n      // Fetch subscribed categories for the user\r\n      const userId = localStorage.getItem('userId');\r\n      fetch('http://localhost:5000/api/user/subscriptions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ user_id: userId })\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const subscribedCategoryIds = data.categories.map(c => c.cid);\r\n        // Mark categories as subscribed or not based on the response\r\n        this.categories.forEach(category => {\r\n          category.subscribed = subscribedCategoryIds.includes(category.id);\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching subscribed categories:', error);\r\n      });\r\n    },\r\n    isSubscribed(categoryId) {\r\n      // Check if categoryId is subscribed\r\n      const category = this.categories.find(c => c.id === categoryId);\r\n      return category ? category.subscribed : false;\r\n    },\r\n    toggleSubscription(categoryId) {\r\n      // Get user ID from localStorage\r\n      const userId = localStorage.getItem('id');\r\n      // Send API call to toggle subscription\r\n      fetch('http://localhost:5000/api/user/togglesub', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          user_id: userId,\r\n          category: categoryId\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Update category subscription status based on response\r\n        const category = this.categories.find(c => c.id === categoryId);\r\n        if (category) {\r\n          category.subscribed = data.subscribed;\r\n          location.reload();\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error toggling subscription:', error);\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n  <style scoped>\r\n  /* Left-side navigation bar styles */\r\n.sidebar {\r\n  width: 250px;\r\n  height: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #333;\r\n  color: #fff;\r\n  padding-top: 20px;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.small-user-photo {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\n\r\n.small-rounded-photo {\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.username {\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n.edit-profile-button {\r\n  background-color: #4CAF50;\r\n  border: none;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  margin-top: 10px;\r\n}\r\n\r\n.edit-profile-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.user-email {\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.navigation-links ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.navigation-links ul li {\r\n  padding: 10px 20px;\r\n}\r\n\r\n.navigation-links ul li a {\r\n  text-decoration: none;\r\n  color: #fff;\r\n}\r\n\r\n.navigation-links ul li a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* Main content area styles */\r\n.main-content {\r\n  margin-left: 250px; /* Adjusted to match the width of the sidebar */\r\n  padding: 20px;\r\n}\r\n\r\n/* Styles for navigation bar */\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.website-name {\r\n  font-size: 20px;\r\n}\r\n\r\n.logout-button {\r\n  background-color: #ff6f61;\r\n  border: none;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.logout-button:hover {\r\n  background-color: #e65346;\r\n}\r\n\r\n  .main-content {\r\n    margin-left: 250px; /* Adjusted to match the width of the sidebar */\r\n    padding: 20px;\r\n    margin-top: 60px; /* Adjusted to create space below the navbar */\r\n    margin-bottom: 60px; /* Adjusted to create space above the subscription content */\r\n  }\r\n\r\n  .subscriptions {\r\n    margin: 20px;\r\n  }\r\n\r\n  .subscription-box {\r\n    border: 1px solid #ccc;\r\n    border-radius: 10px;\r\n    margin-bottom: 20px;\r\n    padding: 10px;\r\n  }\r\n\r\n  .box-top {\r\n    cursor: pointer;\r\n    width: 100%;\r\n  }\r\n\r\n  .box-bottom {\r\n    text-align: center;\r\n  }\r\n  .category-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.category-name {\r\n  flex: 1;\r\n}\r\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}