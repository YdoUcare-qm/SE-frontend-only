{"ast":null,"code":"export default {\n  name: 'TopicPosts',\n  data() {\n    return {\n      websiteName: \"Dis.integrate\",\n      topicId: null,\n      posts: [],\n      data: null\n    };\n  },\n  created() {\n    // Extract topic ID from the route\n    this.topicId = this.$route.params.id;\n    // Fetch posts for the topic\n    this.fetchPosts();\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        // Fetch posts for the topic\n        const response = await fetch('http://localhost:5000/api/posts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.topicId\n          })\n        });\n        this.data = await response.json();\n        this.posts = this.data.post_stream.posts;\n        console.log(this.posts);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n  }\n};","map":{"version":3,"names":["name","data","websiteName","topicId","posts","created","$route","params","id","fetchPosts","methods","response","fetch","method","headers","body","JSON","stringify","json","post_stream","console","log","error","formatDate","date","Date","toLocaleDateString"],"sources":["/home/jeevan/Integration Testing/frontend/frontend/src/components/usercomponents/TopicPosts.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- Left-side navigation bar -->\n      <div class=\"sidebar\">\n        \n        <!-- Navigation links -->\n        <div class=\"navigation-links\">\n          <ul>\n            <li><a href=\"/userprofile\">Profile</a></li>\n            <li><a href=\"/userhome\">Home</a></li>\n            <li><a href=\"/mytickets\">My Tickets</a></li>\n            <li><a href=\"/newticket\">New Ticket</a></li>\n            <li><a href=\"/subscriptions\">Subscriptions</a></li>\n            <li><a href=\"/faq\">FAQs</a></li>\n            <li><a href=\"/usersettings\">Settings</a></li>\n          </ul>\n        </div>\n      </div>\n      \n      <div class=\"navbar\">\n            <div class=\"website-name\">{{ websiteName }}</div>\n            <router-link to=\"/\"><button @click=\"logoutUser\" class=\"logout-button\">Logout</button></router-link>\n            </div>\n      <!-- Main content area -->\n      <div class=\"main-content\">\n        <!-- Main user information section -->\n        \n          <!-- Navigation bar -->\n          \n            <div class=\"topic-posts\">\n    <h1>{{ this.data.title }}</h1>\n    <ul class=\"posts-list\">\n      <li v-for=\"post in posts\" :key=\"post.id\" class=\"post-item\">\n        <div class=\"post-title\">{{ post.username }}</div>\n        <div class=\"post-content\">{{ post.cooked }}</div>\n        <div class=\"post-author\">Author: {{ post.name }}</div>\n        <div class=\"post-date\">Date: {{ formatDate(post.created_at) }}</div>\n      </li>\n    </ul>\n  </div>\n    \n        </div>   \n      </div>\n    \n  </template>\n  \n  <script>\n  export default {\n    name: 'TopicPosts',\n  \n    data() {\n      return {\n        websiteName: \"Dis.integrate\",\n        topicId: null,\n        posts: [],\n        data:null\n    };\n  },\n\n  created() {\n    // Extract topic ID from the route\n    this.topicId = this.$route.params.id;\n    // Fetch posts for the topic\n    this.fetchPosts();\n  },\n\n  methods: {\n    async fetchPosts() {\n      try {\n        // Fetch posts for the topic\n        const response = await fetch('http://localhost:5000/api/posts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ id: this.topicId })\n        });\n        this.data = await response.json();\n        \n        this.posts = this.data.post_stream.posts;\n        console.log(this.posts)\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n  }\n}\n</script>\n  \n  <style scoped>\n  /* Left-side navigation bar styles */\n  .user-home {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  \n  .category-card {\n    width: 300px;\n    margin-bottom: 20px;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n  }\n  \n  .card-content {\n    padding: 20px;\n  }\n  \n  .category-name {\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  .category-description {\n    margin-bottom: 10px;\n  }\n  \n  .subscription-status {\n    font-style: italic;\n  }\n  .sidebar {\n  width: 250px;\n  height: 100%;\n  position: fixed;\n  top: 75px;\n  left: 0;\n  background-color: #333;\n  color: #fff;\n  padding-top: 20px;\n}\n\n.navigation-links ul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n.navigation-links ul li {\n  padding: 10px 20px;\n}\n\n.navigation-links ul li a {\n  text-decoration: none;\n  color: #fff;\n}\n\n.navigation-links ul li a:hover {\n  text-decoration: underline;\n}\n\n/* Main content area styles */\n\n\n/* Styles for navigation bar */\n.navbar {\n  position: fixed;\n  top:0;\n  right:0;\n  left:0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background-color: #f0f0f0;\n}\n\n.website-name {\n  font-size: 50px;\n}\n\n.logout-button {\n  background-color: #ff6f61;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.logout-button:hover {\n  background-color: #e65346;\n}\n.main-content {\n  margin-left: 250px;\n  margin-top: 85px;\n  /* Adjusted to match the width of the sidebar */\n  padding: 20px;\n  display: flex; /* Ensure left and right sides are displayed side by side */\n}\n  </style>\n  "],"mappings":"AA+CE,eAAe;EACbA,IAAI,EAAE,YAAY;EAElBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,eAAe;MAC5BC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,EAAE;MACTH,IAAI,EAAC;IACT,CAAC;EACH,CAAC;EAEDI,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACF,OAAM,GAAI,IAAI,CAACG,MAAM,CAACC,MAAM,CAACC,EAAE;IACpC;IACA,IAAI,CAACC,UAAU,EAAE;EACnB,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAC9DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAET,EAAE,EAAE,IAAI,CAACL;UAAQ,CAAC;QAC3C,CAAC,CAAC;QACF,IAAI,CAACF,IAAG,GAAI,MAAMU,QAAQ,CAACO,IAAI,EAAE;QAEjC,IAAI,CAACd,KAAI,GAAI,IAAI,CAACH,IAAI,CAACkB,WAAW,CAACf,KAAK;QACxCgB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,KAAK;MACxB,EAAE,OAAOkB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDC,UAAUA,CAACC,IAAI,EAAE;MACf,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,EAAE;IAC5C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}