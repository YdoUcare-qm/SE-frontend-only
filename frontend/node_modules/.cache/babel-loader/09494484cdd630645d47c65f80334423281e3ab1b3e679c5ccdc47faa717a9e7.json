{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2125a4d2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"sidebar\\\" data-v-2125a4d2><!-- Navigation links --><div class=\\\"navigation-links\\\" data-v-2125a4d2><ul data-v-2125a4d2><li data-v-2125a4d2><a href=\\\"/userprofile\\\" data-v-2125a4d2>Profile</a></li><li data-v-2125a4d2><a href=\\\"/userhome\\\" data-v-2125a4d2>Home</a></li><li data-v-2125a4d2><a href=\\\"/mytickets\\\" data-v-2125a4d2>My Tickets</a></li><li data-v-2125a4d2><a href=\\\"/newticket\\\" data-v-2125a4d2>New Ticket</a></li><li data-v-2125a4d2><a href=\\\"/subscriptions\\\" data-v-2125a4d2>Subscriptions</a></li><li data-v-2125a4d2><a href=\\\"/faq\\\" data-v-2125a4d2>FAQs</a></li><li data-v-2125a4d2><a href=\\\"/usersettings\\\" data-v-2125a4d2>Settings</a></li></ul></div></div>\", 1);\nconst _hoisted_2 = {\n  class: \"navbar\"\n};\nconst _hoisted_3 = {\n  class: \"website-name\"\n};\nconst _hoisted_4 = {\n  class: \"main-content\"\n};\nconst _hoisted_5 = {\n  class: \"topic-posts\"\n};\nconst _hoisted_6 = {\n  class: \"posts-list\"\n};\nconst _hoisted_7 = {\n  class: \"post-title\"\n};\nconst _hoisted_8 = {\n  class: \"post-content\"\n};\nconst _hoisted_9 = {\n  class: \"post-author\"\n};\nconst _hoisted_10 = {\n  class: \"post-date\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"fixed-box\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Resolution\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Left-side navigation bar \"), _hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($data.websiteName), 1 /* TEXT */), _createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.logoutUser && _ctx.logoutUser(...args)),\n      class: \"logout-button\"\n    }, \"Logout\")]),\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" Main content area \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Main user information section \"), _createCommentVNode(\" Navigation bar \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h1\", null, _toDisplayString(this.data.title), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id,\n      class: \"post-item\"\n    }, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(post.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, _toDisplayString(post.cooked), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, \"Author: \" + _toDisplayString(post.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, \"Date: \" + _toDisplayString(_ctx.formatDate(post.created_at)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.postID != 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", null, _toDisplayString($data.resolvedContent), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","websiteName","_createVNode","_component_router_link","to","onClick","_cache","args","_ctx","logoutUser","_hoisted_4","_hoisted_5","data","title","_hoisted_6","_Fragment","_renderList","posts","post","key","id","_hoisted_7","username","_hoisted_8","cooked","_hoisted_9","name","_hoisted_10","formatDate","created_at","postID","_hoisted_11","_hoisted_12","resolvedContent"],"sources":["/home/jeevan/Integration Testing/SE-frontend-only/frontend/src/components/usercomponents/TopicPosts.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- Left-side navigation bar -->\n      <div class=\"sidebar\">\n        \n        <!-- Navigation links -->\n        <div class=\"navigation-links\">\n          <ul>\n            <li><a href=\"/userprofile\">Profile</a></li>\n            <li><a href=\"/userhome\">Home</a></li>\n            <li><a href=\"/mytickets\">My Tickets</a></li>\n            <li><a href=\"/newticket\">New Ticket</a></li>\n            <li><a href=\"/subscriptions\">Subscriptions</a></li>\n            <li><a href=\"/faq\">FAQs</a></li>\n            <li><a href=\"/usersettings\">Settings</a></li>\n          </ul>\n        </div>\n      </div>\n      \n      <div class=\"navbar\">\n            <div class=\"website-name\">{{ websiteName }}</div>\n            <router-link to=\"/\"><button @click=\"logoutUser\" class=\"logout-button\">Logout</button></router-link>\n            </div>\n      <!-- Main content area -->\n      <div class=\"main-content\">\n        <!-- Main user information section -->\n        \n          <!-- Navigation bar -->\n          \n            <div class=\"topic-posts\">\n    <h1>{{ this.data.title }}</h1>\n    <ul class=\"posts-list\">\n      <li v-for=\"post in posts\" :key=\"post.id\" class=\"post-item\">\n        <div class=\"post-title\">{{ post.username }}</div>\n        <div class=\"post-content\">{{ post.cooked }}</div>\n        <div class=\"post-author\">Author: {{ post.name }}</div>\n        <div class=\"post-date\">Date: {{ formatDate(post.created_at) }}</div>\n      </li>\n    </ul>\n  </div>\n  <div v-if=\"postID != 0\" class=\"fixed-box\">\n          <h4>Resolution</h4>\n          <div>{{ resolvedContent }}</div>\n          \n        </div>\n        </div>   \n      </div>\n    \n  </template>\n  \n  <script>\n  export default {\n    name: 'TopicPosts',\n  \n    data() {\n    return {\n      websiteName: \"Dis.integrate\",\n      topicId: null,\n      posts: [],\n      data: null,\n      postID: null,\n      resolvedContent: '',\n      isModalOpen: false,\n      solution: '' \n    };\n  },\n\n  created() {\n    // Extract topic ID from the route\n    this.topicId = this.$route.params.id;\n    // Fetch posts for the topic\n    this.fetchPosts();\n  },\n\n  async fetchPosts() {\n      try {\n        // Fetch posts for the topic\n        const response = await fetch('http://localhost:5000/api/posts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ id: this.topicId })\n        });\n        this.data = await response.json();\n        this.posts = this.data.post_stream.posts;\n        // After fetching posts, check for topic resolution\n        this.checkTopicResolution();\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    },\n\n    async checkTopicResolution() {\n      try {\n        // Fetch topic resolution status\n        const resolutionResponse = await fetch(`http://localhost:5000/api/staff/topicresolution`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ topic_id: this.topicId })\n        });\n        const resolutionData = await resolutionResponse.json();\n        console.log(resolutionData)\n        this.postID = resolutionData.post_id\n        console.log(this.postID)\n        // Check if topic is resolved\n        if (resolutionData.post_id > 0) {\n          // If topic is resolved, find the resolved post in the fetched posts\n          const resolvedPost = this.posts.find(post => post.id === resolutionData.post_id);\n          if (resolvedPost) {\n            // If topic is resolved, set the resolved content\n            this.resolvedContent = resolvedPost.cooked;\n          }\n        }\n      } catch (error) {\n        console.error('Error checking topic resolution:', error);\n      }\n    },\n\n    logoutUser() {\n      // Logic to handle user logout\n    },\n\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n  }\n\n</script>\n  \n  <style scoped>\n  /* Left-side navigation bar styles */\n  .topic-posts {\n  margin-bottom: 300px; /* Adjusted to match the height of the fixed navbar */\n}\n\n/* Fixed box for resolved topic */\n.fixed-box {\n  position: fixed;\n  bottom: 0px;\n  left: 250px;\n  min-height: 130px;\n  width: calc(100% - 40px); /* Adjusted to match padding */\n  padding: 20px;\n  background-color: #f0f0f0;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n  \n  .category-card {\n    width: 300px;\n    margin-bottom: 20px;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    overflow: hidden;\n    cursor: pointer;\n  }\n  \n  .card-content {\n    padding: 20px;\n  }\n  \n  .category-name {\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  \n  .category-description {\n    margin-bottom: 10px;\n  }\n  \n  .subscription-status {\n    font-style: italic;\n  }\n  .sidebar {\n  width: 250px;\n  height: 100%;\n  position: fixed;\n  top: 75px;\n  left: 0;\n  background-color: #333;\n  color: #fff;\n  padding-top: 20px;\n}\n\n.navigation-links ul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n.navigation-links ul li {\n  padding: 10px 20px;\n}\n\n.navigation-links ul li a {\n  text-decoration: none;\n  color: #fff;\n}\n\n.navigation-links ul li a:hover {\n  text-decoration: underline;\n}\n\n/* Main content area styles */\n\n\n/* Styles for navigation bar */\n.navbar {\n  position: fixed;\n  top:0;\n  right:0;\n  left:0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background-color: #f0f0f0;\n}\n\n.website-name {\n  font-size: 50px;\n}\n\n.logout-button {\n  background-color: #ff6f61;\n  border: none;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.logout-button:hover {\n  background-color: #e65346;\n}\n.main-content {\n  margin-left: 250px;\n  margin-top: 85px;\n  /* Adjusted to match the width of the sidebar */\n  padding: 20px;\n  display: flex; /* Ensure left and right sides are displayed side by side */\n}\n  </style>\n  "],"mappings":";;;;EAmBWA,KAAK,EAAC;AAAQ;;EACRA,KAAK,EAAC;AAAc;;EAI1BA,KAAK,EAAC;AAAc;;EAKdA,KAAK,EAAC;AAAa;;EAE5BA,KAAK,EAAC;AAAY;;EAEbA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAW;;;EAIJA,KAAK,EAAC;;iEACtBC,mBAAA,CAAmB,YAAf,YAAU;;;;uBAxCpBC,mBAAA,CA6CQ,cA5CNC,mBAAA,8BAAiC,EACjCC,UAcM,EAENH,mBAAA,CAGY,OAHZI,UAGY,GAFNJ,mBAAA,CAAiD,OAAjDK,UAAiD,EAAAC,gBAAA,CAApBC,KAAA,CAAAC,WAAW,kBACxCC,YAAA,CAAmGC,sBAAA;IAAtFC,EAAE,EAAC;EAAG;sBAAC,MAAiE,CAAjEX,mBAAA,CAAiE;MAAxDY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAAEf,KAAK,EAAC;OAAgB,QAAM,E;;QAElFG,mBAAA,uBAA0B,EAC1BF,mBAAA,CAqBQ,OArBRiB,UAqBQ,GApBNf,mBAAA,mCAAsC,EAEpCA,mBAAA,oBAAuB,EAErBF,mBAAA,CAUJ,OAVIkB,UAUJ,GATJlB,mBAAA,CAA8B,YAAAM,gBAAA,MAAlBa,IAAI,CAACC,KAAK,kBACtBpB,mBAAA,CAOK,MAPLqB,UAOK,I,kBANHpB,mBAAA,CAKKqB,SAAA,QAAAC,WAAA,CALchB,KAAA,CAAAiB,KAAK,EAAbC,IAAI;yBAAfxB,mBAAA,CAKK;MALsByB,GAAG,EAAED,IAAI,CAACE,EAAE;MAAE5B,KAAK,EAAC;QAC7CC,mBAAA,CAAiD,OAAjD4B,UAAiD,EAAAtB,gBAAA,CAAtBmB,IAAI,CAACI,QAAQ,kBACxC7B,mBAAA,CAAiD,OAAjD8B,UAAiD,EAAAxB,gBAAA,CAApBmB,IAAI,CAACM,MAAM,kBACxC/B,mBAAA,CAAsD,OAAtDgC,UAAsD,EAA7B,UAAQ,GAAA1B,gBAAA,CAAGmB,IAAI,CAACQ,IAAI,kBAC7CjC,mBAAA,CAAoE,OAApEkC,WAAoE,EAA7C,QAAM,GAAA5B,gBAAA,CAAGS,IAAA,CAAAoB,UAAU,CAACV,IAAI,CAACW,UAAU,kB;sCAIrD7B,KAAA,CAAA8B,MAAM,S,cAAjBpC,mBAAA,CAIY,OAJZqC,WAIY,GAHJC,WAAmB,EACnBvC,mBAAA,CAAgC,aAAAM,gBAAA,CAAxBC,KAAA,CAAAiC,eAAe,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}